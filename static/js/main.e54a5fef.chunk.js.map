{"version":3,"sources":["lotto/LottoRandomHeader.js","lotto/plate/NumberPlateBoxComponent.js","lotto/plate/OptionPlateComponent.js","lotto/plate/NumberPlateComponent.js","lotto/LottoRandomSideMenu.js","lotto/numberBox/LottoBoxComponent.js","lotto/LottoRandomContents.js","lotto/LottoRandomTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["LottoRandomHeader","className","Component","NumberPlateBoxComponent","handleChange","e","checked","target","props","numberHandleChange","number","type","this","selected","onChange","OptionPlateComponent","optionHandleChange","value","id","name","optionVal","NumberPlateComponent","allHandleChange","allCheck","onClick","handleButtonOnClick","map","select","index","LottoRandomSideMenu","LottoBoxComponent","state","numbers","b_number","lottoNumber","slice","n","LottoRandomContents","lottoNumbers","clearButtonOnClick","i","LottoRandomTemplate","setState","length","pop","checkFalse","trueCount","forEach","s","console","log","push","alert","selectBundle","bundle","lotto","selectLotto","temp","sort","a","b","Math","floor","random","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e54a5fef.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\n\r\nclass LottoRandomHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-header\">\r\n                <b>Hello Jerrytto</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomHeader;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\n\r\nclass NumberPlateBoxComponent extends Component {\r\n\r\n    handleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.numberHandleChange(checked, this.props.number)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"number-plate-box-contents\">\r\n              <div className=\"number-plate-box\">\r\n                  <input type=\"checkbox\" checked={this.props.selected} onChange={this.handleChange} />\r\n                  <span>{this.props.number}</span>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberPlateBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./OptionPlateStyle.css\";\r\n\r\nclass OptionPlateComponent extends Component {\r\n\r\n    optionHandleChange = (e) => {\r\n        this.props.optionHandleChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"radio-box-style\">\r\n                <b>숫자</b>\r\n                <input type=\"radio\" id=\"option1\" name=\"Include\" value=\"Include\"\r\n                       checked={this.props.optionVal === \"Include\" ? true : false} onChange={this.optionHandleChange} />넣어\r\n                <input type=\"radio\" id=\"option2\" name=\"Exclude\" value=\"Exclude\"\r\n                       checked={this.props.optionVal === \"Exclude\" ? true : false} onChange={this.optionHandleChange} />빼\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionPlateComponent;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\nimport NumberPlateBoxComponent from \"./NumberPlateBoxComponent\";\r\nimport OptionPlateComponent from \"./OptionPlateComponent\";\r\n\r\nclass NumberPlateComponent extends Component {\r\n\r\n    allHandleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.allHandleChange(checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"number-plate-all-box\">\r\n                    <OptionPlateComponent\r\n                        optionVal={this.props.optionVal}\r\n                        optionHandleChange={this.props.optionHandleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"number-plate-all-box\">\r\n                    <input type=\"checkbox\" checked={this.props.allCheck} onChange={this.allHandleChange} />\r\n                    <span>ALL</span>\r\n                    <button className=\"number-button\" onClick={this.props.handleButtonOnClick}>만들어</button>\r\n                </div>\r\n                <div className=\"number-plate-contents\">\r\n                    {this.props.selected.map((select, index)=>\r\n                            <NumberPlateBoxComponent\r\n                                key={index}\r\n                                number={index+1}\r\n                                selected={select}\r\n                                numberHandleChange={this.props.numberHandleChange}\r\n                            />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberPlateComponent;","import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\nimport NumberPlateComponent from \"./plate/NumberPlateComponent\";\r\nimport OptionPlateComponent from \"./plate/OptionPlateComponent\";\r\n\r\nclass LottoRandomSideMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-sidemenu\">\r\n                <NumberPlateComponent\r\n                    allCheck={this.props.allCheck}\r\n                    selected={this.props.selected}\r\n                    allHandleChange={this.props.allHandleChange}\r\n                    numberHandleChange={this.props.numberHandleChange}\r\n                    handleButtonOnClick={this.props.handleButtonOnClick}\r\n                    optionVal={this.props.optionVal}\r\n                    optionHandleChange={this.props.optionHandleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomSideMenu;","import React, {Component} from \"react\";\r\nimport \"./LottoBoxStyle.css\"\r\n\r\nclass LottoBoxComponent extends Component {\r\n    state = {\r\n        numbers : [1, 2, 3, 4, 5, 6],\r\n        b_number : 7\r\n    }\r\n    render() {\r\n        const numbers = this.props.lottoNumber.slice(0, 6)\r\n        const b_number = this.props.lottoNumber[6]\r\n\r\n        return (\r\n            <div className=\"lotto-contents\">\r\n                <div className=\"lotto-box\">\r\n                    {numbers.map(n=>\r\n                        <div\r\n                            className=\"lotto-box-number\"\r\n                            key={n}>{n}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"lotto-box-plus\">+</div>\r\n                    <div className=\"lotto-box-number\">{b_number}</div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./LottoRandomStyle.css\";\r\nimport LottoBoxComponent from \"./numberBox/LottoBoxComponent\";\r\n\r\nclass LottoRandomContents extends Component {\r\n    render() {\r\n        const lottoNumbers = this.props.lottoNumbers\r\n        return (\r\n            <div className=\"lotto-random-contents\">\r\n                <div className=\"blank-style\">\r\n                    <button className=\"clear-button\" onClick={this.props.clearButtonOnClick}>지워</button>\r\n                </div>\r\n                <div>\r\n                    {lottoNumbers.map((lottoNumber, i) =>\r\n                        <LottoBoxComponent\r\n                            key={i}\r\n                            lottoNumber={lottoNumber}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoRandomContents;","import React, { Component } from 'react';\r\nimport LottoRandomHeader from \"./LottoRandomHeader\";\r\nimport LottoRandomSideMenu from \"./LottoRandomSideMenu\";\r\nimport LottoRandomContents from \"./LottoRandomContents\";\r\nimport \"./LottoRandomStyle.css\";\r\n\r\nclass LottoRandomTemplate extends Component {\r\n\r\n    state = {\r\n        allCheck : {},\r\n        optionVal : {},\r\n        selected : [],\r\n        lottoNumbers : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {selected, allCheck, optionVal} = this.state;\r\n        for(let i=1; i<46; i++) {\r\n            selected.push(false);\r\n        }\r\n        this.allCheck = true //기본 ALL 체크\r\n        this.optionVal = \"Include\" //기본 숫자 Include\r\n        this.allHandleChange(true);\r\n        this.setState({allCheck: this.allCheck, optionVal: this.optionVal, selected});\r\n    }\r\n\r\n    //전체 체크\r\n    allHandleChange = (checked) => {\r\n        const {selected} = this.state;\r\n        for(let i=1; i<46; i++) {\r\n            this.numberHandleChange(checked, i)\r\n        }\r\n        this.setState({allCheck: checked, selected: selected})\r\n    }\r\n\r\n    //숫자 포함/제외 옵션 선택 클릭\r\n    optionHandleChange = (value) => {\r\n        this.optionVal = value\r\n        this.setState({optionVal: value})\r\n    }\r\n\r\n    //\"지워\"\" 버튼 클릭\r\n    clearButtonOnClick = () => {\r\n        const {lottoNumbers} = this.state\r\n        if(lottoNumbers.length > 0) {\r\n            while (lottoNumbers.length > 0) {\r\n                lottoNumbers.pop()\r\n            }\r\n        }\r\n        this.setState({lottoNumbers})\r\n    }\r\n\r\n    //숫자 선택 이벤트 발생\r\n    numberHandleChange = (checked, number) => {\r\n        const {allCheck, selected} = this.state;\r\n        let checkFalse = allCheck;\r\n\r\n        selected[number-1] = checked;\r\n\r\n        let trueCount = 0;\r\n        selected.forEach((s, i) => {\r\n            if(s) {\r\n                trueCount++;\r\n            }\r\n        })\r\n        if(trueCount >= 45) {\r\n            checkFalse = true\r\n        } else {\r\n            if(checked === false) {\r\n                checkFalse = false\r\n            }\r\n        }\r\n        this.setState({allCheck: checkFalse, selected})\r\n    ;}\r\n\r\n    //\"만들어\" 버튼 클릭\r\n    handleButtonOnClick = () => {\r\n        const {selected, lottoNumbers, optionVal} = this.state\r\n        const numbers = [];\r\n        let selectedNumberCount = 0;\r\n\r\n        console.log(optionVal)\r\n\r\n        selected.forEach((s, i) => {\r\n            if(optionVal === \"Include\") {\r\n                if(s) {\r\n                    selectedNumberCount++;\r\n                    numbers.push(i+1)\r\n                }\r\n            } else if(optionVal === \"Exclude\") {\r\n                if(!s) {\r\n                    selectedNumberCount++;\r\n                    numbers.push(i+1)\r\n                }\r\n            }\r\n        })\r\n\r\n        console.log(numbers)\r\n        ///////////////////////////////////////////\r\n        //선택 숫자 포함일 때\r\n        if(optionVal === \"Include\") {\r\n            if (numbers.length < 7) {\r\n                alert(\"7개 이상(보너스 번호 포함)의 번호를 선택해야 합니다.\")\r\n                return;\r\n            } else {\r\n                alert(\"번호를 5개 생성합니다.\")\r\n                this.selectBundle(0, numbers)\r\n            }\r\n        ///////////////////////////////////////////\r\n        //선택 숫자 제외일 때\r\n        } else if(optionVal === \"Exclude\") {\r\n            if (numbers.length < 7) {\r\n                alert(\"39개 이상(보너스 번호 포함)의 번호를 제외할 수 없습니다.\")\r\n            } else {\r\n                alert(\"번호를 5개 생성합니다.\")\r\n                this.selectBundle(0, numbers)\r\n            }\r\n        }\r\n    }\r\n\r\n    //몇개 보여줄지.?\r\n    selectBundle = (bundle, numbers) => {\r\n\r\n        console.log(numbers)\r\n\r\n        const {lottoNumbers} = this.state\r\n        for (let i = 0; i < (bundle + 1) * 5; i++) {\r\n            const lotto = this.selectLotto([], numbers);\r\n            lottoNumbers.push(lotto);\r\n            this.setState({lottoNumbers});\r\n        }\r\n    }\r\n\r\n    //선택한 번호를 기준으로 생성하는 랜덤 알고리즘\r\n    selectLotto = (lottoNumber, numbers) => {\r\n        if(lottoNumber.length === 7) {\r\n            const temp = lottoNumber.slice(0, 6);\r\n            temp.sort((a,b)=>a-b);\r\n            temp.push(lottoNumber[6]);\r\n            return temp;\r\n        }\r\n        let n = numbers[Math.floor(Math.random() * numbers.length)];\r\n        if(lottoNumber.indexOf(n) < 0) {\r\n            lottoNumber.push(n);\r\n        }\r\n        return this.selectLotto(lottoNumber, numbers);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-template\">\r\n                <LottoRandomHeader />\r\n                <div className=\"lott-random-main\">\r\n                    <LottoRandomSideMenu\r\n                        allCheck={this.state.allCheck}\r\n                        selected={this.state.selected}\r\n                        allHandleChange={this.allHandleChange}\r\n                        numberHandleChange={this.numberHandleChange}\r\n                        handleButtonOnClick={this.handleButtonOnClick}\r\n                        optionVal={this.optionVal}\r\n                        optionHandleChange={this.optionHandleChange}\r\n                    />\r\n                    <LottoRandomContents\r\n                        lottoNumbers={this.state.lottoNumbers}\r\n                        clearButtonOnClick={this.clearButtonOnClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LottoRandomTemplate;","/* eslint-disablt */ //문법 warning console에 뜨지 않도록\r\n\r\nimport React from \"react\";\r\nimport './App.css';\r\nimport LottoRandomTemplate from \"./lotto/LottoRandomTemplate\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"lotto-random-template\">\r\n            <LottoRandomTemplate />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}