{"version":3,"sources":["png/main_jerry.svg","lotto/JerryTtoHeader.js","lotto/plate/NumberPlateBoxComponent.js","lotto/plate/OptionPlateComponent.js","lotto/plate/NumberPlateComponent.js","lotto/recommend/SelectBoxTemplate.js","lotto/JerryTtoSideMenu.js","lotto/numberBox/LottoBoxComponent.js","lotto/JerryTtoContents.js","lotto/JerryTtoTemplate.js","lotto/JerryTtoTopMenu.js","png/bg_jerry.svg","App.js","reportWebVitals.js","index.js"],"names":["JerryTtoHeader","className","src","main","Component","NumberPlateBoxComponent","handleChange","e","checked","target","props","numberHandleChange","number","type","this","selected","onChange","OptionPlateComponent","optionHandleChange","value","id","name","optionVal","NumberPlateComponent","allHandleChange","console","log","isRandom","onClick","handleButtonOnClick","allCheck","map","select","index","SelectBoxTemplate","selectHandleChange","selectHandelChange","Select","recommend","MenuItem","JerryTtoSideMenu","LottoBoxComponent","state","numbers","b_number","lottoNumber","slice","n","JerryTtoContents","lottoNumbers","clearButtonOnClick","i","JerryTtoTemplate","setState","alert","length","pop","checkFalse","trueCount","forEach","s","push","selectBundle","bundle","lotto","selectLotto","temp","sort","a","b","Math","floor","random","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a2ddb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main_jerry.d4f4113a.svg\";","import React, {Component} from \"react\";\r\nimport \"./JerryTtoStyle.css\";\r\nimport main from \"../png/main_jerry.svg\"\r\n\r\nclass JerryTtoHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-header\">\r\n                <b>Hello JERRYtto</b>\r\n                <span>\r\n                    <img className=\"image-style\" src={main} />\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JerryTtoHeader;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\n\r\nclass NumberPlateBoxComponent extends Component {\r\n\r\n    handleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.numberHandleChange(checked, this.props.number)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"number-plate-box-contents\">\r\n              <div className=\"number-plate-box\">\r\n                  <input type=\"checkbox\" checked={this.props.selected} onChange={this.handleChange} />\r\n                  <span>{this.props.number}</span>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default NumberPlateBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./OptionPlateStyle.css\";\r\n\r\nclass OptionPlateComponent extends Component {\r\n\r\n    optionHandleChange = (e) => {\r\n        this.props.optionHandleChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"radio-box-style\">\r\n                <b>숫자</b>\r\n                <span>\r\n                    <input type=\"radio\" id=\"option1\" name=\"Include\" value=\"Include\"\r\n                           checked={this.props.optionVal === \"Include\" ? true : false} onChange={this.optionHandleChange} />넣어\r\n                    <input type=\"radio\" id=\"option2\" name=\"Exclude\" value=\"Exclude\"\r\n                           checked={this.props.optionVal === \"Exclude\" ? true : false} onChange={this.optionHandleChange} />빼\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionPlateComponent;","import React, {Component} from \"react\";\r\nimport \"./NumberPlateStyle.css\";\r\nimport NumberPlateBoxComponent from \"./NumberPlateBoxComponent\";\r\nimport OptionPlateComponent from \"./OptionPlateComponent\";\r\n\r\nclass NumberPlateComponent extends Component {\r\n\r\n    allHandleChange = (e) => {\r\n        const {checked} = e.target;\r\n        this.props.allHandleChange(checked)\r\n        console.log(\"this.props.isRandom:\"+this.props.isRandom)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isRandom &&\r\n                <div className=\"number-plate-all-box\">\r\n                    <OptionPlateComponent\r\n                        optionVal={this.props.optionVal}\r\n                        optionHandleChange={this.props.optionHandleChange}\r\n                    />\r\n                </div>\r\n                }\r\n                <button className=\"number-button\" onClick={this.props.handleButtonOnClick}>만들어</button>\r\n                {this.props.isRandom &&\r\n                <div className=\"number-plate-all-box\">\r\n                    <input type=\"checkbox\" checked={this.props.allCheck} onChange={this.allHandleChange}/>\r\n                    <span>ALL</span>\r\n\r\n                </div>\r\n                }\r\n                <div>\r\n\r\n                </div>\r\n                {this.props.isRandom &&\r\n                <div className=\"number-plate-contents\">\r\n                    {this.props.selected.map((select, index) =>\r\n                        <NumberPlateBoxComponent\r\n                            key={index}\r\n                            number={index + 1}\r\n                            selected={select}\r\n                            numberHandleChange={this.props.numberHandleChange}\r\n                        />\r\n                    )}\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberPlateComponent;","import React, {Component} from \"react\";\r\nimport {MenuItem, Select} from \"@material-ui/core\";\r\n\r\nclass SelectBoxTemplate extends Component {\r\n\r\n    selectHandleChange = (e) => {\r\n        this.props.selectHandelChange(e)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-select-style\">\r\n                {/*<InputLabel className={this.state.useStyles.formControl} id=\"recommend-select-box-name\">추천 종류 선택</InputLabel>*/}\r\n                <Select\r\n                    // labelId=\"recommend-select-box-name\"\r\n                    value={this.props.recommend}\r\n                    onChange={this.selectHandleChange}\r\n                >\r\n                    <MenuItem value={0}>랜덤 번호</MenuItem>\r\n                    <MenuItem value={1}>많이 당첨된 번호</MenuItem>\r\n                    <MenuItem value={2}>많이 당첨되지 않은 번호</MenuItem>\r\n                    <MenuItem value={3}>추천 번호</MenuItem>\r\n                </Select>\r\n                {/*<select value={this.props.recommend} onChange={this.selectHandleChange}>*/}\r\n                {/*    <option value={0}>랜덤 번호</option>*/}\r\n                {/*    <option value={1}>많이 당첨된 번호</option>*/}\r\n                {/*    <option value={2}>많이 당첨되지 않은 번호</option>*/}\r\n                {/*    <option value={3}>추천 번호</option>*/}\r\n                {/*</select>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectBoxTemplate;","import React, {Component} from \"react\";\r\nimport \"./JerryTtoStyle.css\";\r\nimport NumberPlateComponent from \"./plate/NumberPlateComponent\";\r\nimport SelectBoxTemplate from \"./recommend/SelectBoxTemplate\"\r\n\r\nclass JerryTtoSideMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-sidemenu\">\r\n                <SelectBoxTemplate\r\n                    recommend={this.props.recommend}\r\n                    selectHandelChange={this.props.selectHandelChange}\r\n                />\r\n                <NumberPlateComponent\r\n                    allCheck={this.props.allCheck}\r\n                    selected={this.props.selected}\r\n                    allHandleChange={this.props.allHandleChange}\r\n                    numberHandleChange={this.props.numberHandleChange}\r\n                    handleButtonOnClick={this.props.handleButtonOnClick}\r\n                    optionVal={this.props.optionVal}\r\n                    optionHandleChange={this.props.optionHandleChange}\r\n                    recommend={this.props.recommend}\r\n                    isRandom={this.props.isRandom}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JerryTtoSideMenu;","import React, {Component} from \"react\";\r\nimport \"./LottoBoxStyle.css\"\r\n\r\nclass LottoBoxComponent extends Component {\r\n    state = {\r\n        numbers : [1, 2, 3, 4, 5, 6],\r\n        b_number : 7\r\n    }\r\n    render() {\r\n        const numbers = this.props.lottoNumber.slice(0, 6)\r\n        const b_number = this.props.lottoNumber[6]\r\n\r\n        return (\r\n            <div className=\"lotto-contents\">\r\n                <div className=\"lotto-box\">\r\n                    {numbers.map(n=>\r\n                        <div\r\n                            className=\"lotto-box-number\"\r\n                            key={n}>{n}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"lotto-box-plus\">+</div>\r\n                    <div className=\"lotto-box-number\">{b_number}</div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LottoBoxComponent;","import React, {Component} from \"react\";\r\nimport \"./JerryTtoStyle.css\";\r\nimport LottoBoxComponent from \"./numberBox/LottoBoxComponent\";\r\n\r\nclass JerryTtoContents extends Component {\r\n    render() {\r\n        const lottoNumbers = this.props.lottoNumbers\r\n        return (\r\n            <div className=\"lotto-random-contents\">\r\n                <div className=\"blank-style\">\r\n                    <button className=\"clear-button\" onClick={this.props.clearButtonOnClick}>지워</button>\r\n                </div>\r\n                <div>\r\n                    {lottoNumbers.map((lottoNumber, i) =>\r\n                        <LottoBoxComponent\r\n                            key={i}\r\n                            lottoNumber={lottoNumber}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JerryTtoContents;","import React, { Component } from 'react';\r\nimport JerryTtoHeader from \"./JerryTtoHeader\";\r\nimport JerryTtoSideMenu from \"./JerryTtoSideMenu\";\r\nimport JerryTtoContents from \"./JerryTtoContents\";\r\nimport JerryTtoTopMenu from \"./JerryTtoTopMenu\";\r\nimport \"./JerryTtoStyle.css\";\r\n\r\nclass JerryTtoTemplate extends Component {\r\n\r\n    state = {\r\n        allCheck : {}, //ALL 체크 여부\r\n        optionVal : {}, //숫자 넣어(Include)/빼(Exclude)\r\n        selected : [], //랜덤 번호일 경우 선택한 번호 순서대로 체크 여부 배열\r\n        lottoNumbers : [], //\"만들어\" 결과 번호 배열\r\n        recommend: '0', //번호 생성 알고리즘 선택 (0/1/2/3)\r\n        isRandom: true //랜덤 번호 여부\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {selected, allCheck, optionVal} = this.state;\r\n        for(let i=1; i<46; i++) {\r\n            selected.push(false);\r\n        }\r\n        this.allCheck = true //기본 ALL 체크\r\n        this.optionVal = \"Include\" //기본 숫자 Include\r\n        this.allHandleChange(true);\r\n        this.setState({allCheck: this.allCheck, optionVal: this.optionVal, selected});\r\n    }\r\n\r\n    //번호 생성 알고리즘 선택 시\r\n    selectHandelChange = (e) => {\r\n        if(e.target.value === '0' || e.target.value === 0) {\r\n            this.setState({recommend: e.target.value, isRandom: true});\r\n        } else {\r\n            alert(\"서비스 준비중입니다.\")\r\n            // this.setState({recommend: e.target.value, isRandom: false})\r\n            //selected 리셋해야됨.\r\n        }\r\n    }\r\n\r\n    //전체 체크\r\n    allHandleChange = (checked) => {\r\n        const {selected} = this.state;\r\n        for(let i=1; i<46; i++) {\r\n            this.numberHandleChange(checked, i)\r\n        }\r\n        this.setState({allCheck: checked, selected: selected})\r\n    }\r\n\r\n    //숫자 포함/제외 옵션 선택 클릭\r\n    optionHandleChange = (value) => {\r\n        this.optionVal = value\r\n        this.setState({optionVal: value})\r\n    }\r\n\r\n    //\"지워\"\" 버튼 클릭\r\n    clearButtonOnClick = () => {\r\n        const {lottoNumbers} = this.state\r\n        if(lottoNumbers.length > 0) {\r\n            while (lottoNumbers.length > 0) {\r\n                lottoNumbers.pop()\r\n            }\r\n        }\r\n        this.setState({lottoNumbers})\r\n    }\r\n\r\n    //숫자 선택 이벤트 발생\r\n    numberHandleChange = (checked, number) => {\r\n        const {allCheck, selected} = this.state;\r\n        let checkFalse = allCheck;\r\n\r\n        selected[number-1] = checked;\r\n\r\n        let trueCount = 0;\r\n        selected.forEach((s, i) => {\r\n            if(s) {\r\n                trueCount++;\r\n            }\r\n        })\r\n        if(trueCount >= 45) {\r\n            checkFalse = true\r\n        } else {\r\n            if(checked === false) {\r\n                checkFalse = false\r\n            }\r\n        }\r\n        this.setState({allCheck: checkFalse, selected})\r\n    ;}\r\n\r\n    //\"만들어\" 버튼 클릭\r\n    handleButtonOnClick = () => {\r\n        const {selected, lottoNumbers, optionVal} = this.state\r\n        const numbers = [];\r\n        let selectedNumberCount = 0;\r\n\r\n        selected.forEach((s, i) => {\r\n            if(optionVal === \"Include\") {\r\n                if(s) {\r\n                    selectedNumberCount++;\r\n                    numbers.push(i+1)\r\n                }\r\n            } else if(optionVal === \"Exclude\") {\r\n                if(!s) {\r\n                    selectedNumberCount++;\r\n                    numbers.push(i+1)\r\n                }\r\n            }\r\n        })\r\n\r\n        ///////////////////////////////////////////\r\n        //선택 숫자 포함일 때\r\n        if(optionVal === \"Include\") {\r\n            if (numbers.length < 7) {\r\n                alert(\"7개 이상(보너스 번호 포함)의 번호를 선택해야 합니다.\")\r\n                return;\r\n            } else {\r\n                alert(\"번호를 5개 생성합니다.\")\r\n                this.selectBundle(0, numbers)\r\n            }\r\n        ///////////////////////////////////////////\r\n        //선택 숫자 제외일 때\r\n        } else if(optionVal === \"Exclude\") {\r\n            if (numbers.length < 7) {\r\n                alert(\"39개 이상(보너스 번호 포함)의 번호를 제외할 수 없습니다.\")\r\n            } else {\r\n                alert(\"번호를 5개 생성합니다.\")\r\n                this.selectBundle(0, numbers)\r\n            }\r\n        }\r\n    }\r\n\r\n    //몇개 보여줄지.?\r\n    selectBundle = (bundle, numbers) => {\r\n        const {lottoNumbers} = this.state\r\n        for (let i = 0; i < (bundle + 1) * 5; i++) {\r\n            const lotto = this.selectLotto([], numbers);\r\n            lottoNumbers.push(lotto);\r\n            this.setState({lottoNumbers});\r\n        }\r\n    }\r\n\r\n    //선택한 번호를 기준으로 생성하는 랜덤 알고리즘\r\n    selectLotto = (lottoNumber, numbers) => {\r\n        if(lottoNumber.length === 7) {\r\n            const temp = lottoNumber.slice(0, 6);\r\n            temp.sort((a,b)=>a-b);\r\n            temp.push(lottoNumber[6]);\r\n            return temp;\r\n        }\r\n        let n = numbers[Math.floor(Math.random() * numbers.length)];\r\n        if(lottoNumber.indexOf(n) < 0) {\r\n            lottoNumber.push(n);\r\n        }\r\n        return this.selectLotto(lottoNumber, numbers);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-random-template\">\r\n                <JerryTtoHeader />\r\n                {/*<JerryTtoTopMenu />*/}\r\n                <div className=\"lotto-random-main\">\r\n                    <JerryTtoSideMenu\r\n                        allCheck={this.state.allCheck}\r\n                        selected={this.state.selected}\r\n                        allHandleChange={this.allHandleChange}\r\n                        numberHandleChange={this.numberHandleChange}\r\n                        handleButtonOnClick={this.handleButtonOnClick}\r\n                        optionVal={this.optionVal}\r\n                        optionHandleChange={this.optionHandleChange}\r\n                        recommend={this.state.recommend}\r\n                        isRandom={this.state.isRandom}\r\n                        selectHandelChange={this.selectHandelChange}\r\n                    />\r\n                    <JerryTtoContents\r\n                        lottoNumbers={this.state.lottoNumbers}\r\n                        clearButtonOnClick={this.clearButtonOnClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default JerryTtoTemplate;","import React, {Component} from \"react\";\r\n\r\nclass JerryTtoTopMenu extends Component {\r\n    state = {\r\n        title: \"Select\",\r\n        selectOption: ''\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        console.log(e)\r\n        this.setState({selectValue: e})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lotto-top-menu\">\r\n                Top Menu 자리~\r\n                {/*<DropdownButton*/}\r\n                {/*    alignRight*/}\r\n                {/*    title={title}*/}\r\n                {/*    id=\"dropdown-menu-align-right\"*/}\r\n                {/*    onSelect={this.handleSelect}*/}\r\n                {/*>*/}\r\n                {/*    <Dropdown.Item eventKey=\"option-1\">메뉴1</Dropdown.Item>*/}\r\n                {/*    <Dropdown.Item eventKey=\"option-2\">메뉴2</Dropdown.Item>*/}\r\n                {/*    <Dropdown.Item eventKey=\"option-3\">메뉴3</Dropdown.Item>*/}\r\n                {/*    <Dropdown.Divider />*/}\r\n                {/*    <Dropdown.Item eventKey=\"some link\">기타</Dropdown.Item>*/}\r\n                {/*</DropdownButton>*/}\r\n                {/*<h4>You selected {selectOption}</h4>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JerryTtoTopMenu;","export default __webpack_public_path__ + \"static/media/bg_jerry.91fe4125.svg\";","/* eslint-disablt */ //문법 warning console에 뜨지 않도록\r\n\r\nimport React from \"react\";\r\nimport './App.css';\r\nimport JerryTtoTemplate from \"./lotto/JerryTtoTemplate\";\r\nimport bgJerry from \"./png/bg_jerry.svg\"\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        // <div className=\"bg-style\" style={{backgroundImage:`url(${bgJerry})`}}>\r\n            <div className=\"lotto-random-template\" >\r\n                <JerryTtoTemplate />\r\n            </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}